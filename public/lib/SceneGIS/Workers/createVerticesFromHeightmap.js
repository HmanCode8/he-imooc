/**
 * @license
 * SceneGIS - https://github.com/CesiumGS/cesium
 * Version 1.97
 *
 * Copyright 2011-2022 SceneGIS Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
define(["./Matrix3-a45402cf","./LercDecode-bb83c22f","./AxisAlignedBoundingBox-e6370b82","./Transforms-c38817cd","./Matrix2-bce7772b","./defaultValue-192c850d","./TerrainEncoding-432a4214","./Math-be2c8494","./OrientedBoundingBox-d8d8ede3","./WebMercatorProjection-7f67a88a","./RuntimeError-ca280330","./createTaskProcessorWorker","./_commonjsHelpers-f78443cf","./combine-b9b48e3c","./AttributeCompression-cb62dc59","./ComponentDatatype-f194b981","./WebGLConstants-1bcc99d3","./EllipsoidTangentPlane-b1a9b8da","./IntersectionTests-f861e6a9","./Plane-f4b01105","./CartesianRectangle-3289fb67"],(function(e,t,i,n,o,a,r,c,s,l,d,u,h,m,g,T,f,E,I,p,b){"use strict";const R={};R.DEFAULT_STRUCTURE=Object.freeze({heightScale:1,heightOffset:0,elementsPerHeight:1,stride:1,elementMultiplier:256,isBigEndian:!1});const S=new e.Cartesian3,N=new o.Matrix4,M=new e.Cartesian3,w=new e.Cartesian3;R.computeVertices=function(t){const d=Math.cos,u=Math.sin,h=Math.sqrt,m=Math.atan,g=Math.exp,T=c.CesiumMath.PI_OVER_TWO,f=c.CesiumMath.toRadians,E=t.heightmap,I=t.width,p=t.height,b=t.skirtHeight,x=b>0,C=a.defaultValue(t.isGeographic,!0),A=a.defaultValue(t.ellipsoid,e.Ellipsoid.WGS84),U=1/A.maximumRadius,V=o.Rectangle.clone(t.nativeRectangle),P=o.Rectangle.clone(t.rectangle);let B,_,F,y;a.defined(P)?(B=P.west,_=P.south,F=P.east,y=P.north):C?(B=f(V.west),_=f(V.south),F=f(V.east),y=f(V.north)):(B=V.west*U,_=T-2*m(g(-V.south*U)),F=V.east*U,y=T-2*m(g(-V.north*U)));let H=t.relativeToCenter;const L=a.defined(H);H=L?H:e.Cartesian3.ZERO;const O=a.defaultValue(t.includeWebMercatorT,!1),W=a.defaultValue(t.exaggeration,1),D=a.defaultValue(t.exaggerationRelativeHeight,0),v=1!==W,Y=a.defaultValue(t.structure,R.DEFAULT_STRUCTURE),j=a.defaultValue(Y.heightScale,R.DEFAULT_STRUCTURE.heightScale),z=a.defaultValue(Y.heightOffset,R.DEFAULT_STRUCTURE.heightOffset),G=a.defaultValue(Y.elementsPerHeight,R.DEFAULT_STRUCTURE.elementsPerHeight),k=a.defaultValue(Y.stride,R.DEFAULT_STRUCTURE.stride),q=a.defaultValue(Y.elementMultiplier,R.DEFAULT_STRUCTURE.elementMultiplier),X=a.defaultValue(Y.isBigEndian,R.DEFAULT_STRUCTURE.isBigEndian);let Z=o.Rectangle.computeWidth(V),J=o.Rectangle.computeHeight(V);const K=Z/(I-1),Q=J/(p-1);C||(Z*=U,J*=U);const $=A.radiiSquared,ee=$.x,te=$.y,ie=$.z;let ne=65536,oe=-65536;const ae=n.Transforms.eastNorthUpToFixedFrame(H,A),re=o.Matrix4.inverseTransformation(ae,N);let ce,se;O&&(ce=l.WebMercatorProjection.geodeticLatitudeToMercatorAngle(_),se=1/(l.WebMercatorProjection.geodeticLatitudeToMercatorAngle(y)-ce));const le=M;le.x=Number.POSITIVE_INFINITY,le.y=Number.POSITIVE_INFINITY,le.z=Number.POSITIVE_INFINITY;const de=w;de.x=Number.NEGATIVE_INFINITY,de.y=Number.NEGATIVE_INFINITY,de.z=Number.NEGATIVE_INFINITY;let ue=Number.POSITIVE_INFINITY;const he=I*p,me=he+(b>0?2*I+2*p:0),ge=new Array(me),Te=new Array(me),fe=new Array(me),Ee=O?new Array(me):[],Ie=v?new Array(me):[];let pe=0,be=p,Re=0,Se=I;x&&(--pe,++be,--Re,++Se);const Ne=1e-5;for(let t=pe;t<be;++t){let i=t;i<0&&(i=0),i>=p&&(i=p-1);let n=V.north-Q*i;n=C?f(n):T-2*m(g(-n*U));let a=(n-_)/(y-_);a=c.CesiumMath.clamp(a,0,1);const r=t===pe,s=t===be-1;b>0&&(r?n+=Ne*J:s&&(n-=Ne*J));const R=d(n),N=u(n),M=ie*N;let w;O&&(w=(l.WebMercatorProjection.geodeticLatitudeToMercatorAngle(n)-ce)*se);for(let t=Re;t<Se;++t){let n=t;n<0&&(n=0),n>=I&&(n=I-1);const l=i*(I*k)+n*k;let m;if(1===G)m=E[l];else{let e;if(m=0,X)for(e=0;e<G;++e)m=m*q+E[l+e];else for(e=G-1;e>=0;--e)m=m*q+E[l+e]}m=m*j+z,oe=Math.max(oe,m),ne=Math.min(ne,m);let g=V.west+K*n;C?g=f(g):g*=U;let T=(g-B)/(F-B);T=c.CesiumMath.clamp(T,0,1);let x=i*I+n;if(b>0){const e=t===Re,o=t===Se-1,a=r||s||e||o;if((r||s)&&(e||o))continue;a&&(m-=b,e?(x=he+(p-i-1),g-=Ne*Z):s?x=he+p+(I-n-1):o?(x=he+p+I+i,g+=Ne*Z):r&&(x=he+p+I+p+n))}const P=R*d(g),_=R*u(g),y=ee*P,H=te*_,L=1/h(y*P+H*_+M*N),W=y*L,D=H*L,Y=M*L,J=new e.Cartesian3;J.x=W+P*m,J.y=D+_*m,J.z=Y+N*m,o.Matrix4.multiplyByPoint(re,J,S),e.Cartesian3.minimumByComponent(S,le,le),e.Cartesian3.maximumByComponent(S,de,de),ue=Math.min(ue,m),ge[x]=J,fe[x]=new o.Cartesian2(T,a),Te[x]=m,O&&(Ee[x]=w),v&&(Ie[x]=A.geodeticSurfaceNormal(J))}}const Me=n.BoundingSphere.fromPoints(ge);let we,xe;if(a.defined(P)&&(we=s.OrientedBoundingBox.fromRectangle(P,ne,oe,A)),L){xe=new r.EllipsoidalOccluder(A).computeHorizonCullingPointPossiblyUnderEllipsoid(H,ge,ne)}const Ce=new i.AxisAlignedBoundingBox(le,de,H),Ae=new r.TerrainEncoding(H,Ce,ue,oe,ae,!1,O,v,W,D),Ue=new Float32Array(me*Ae.stride);let Ve=0;for(let e=0;e<me;++e)Ve=Ae.encode(Ue,Ve,ge[e],fe[e],Te[e],void 0,Ee[e],Ie[e]);return{vertices:Ue,maximumHeight:oe,minimumHeight:ne,encoding:Ae,boundingSphere3D:Me,orientedBoundingBox:we,occludeePointInScaledSpace:xe}};var x=R;return u((function(i,n){if(i.encoding===t.HeightmapEncoding.LERC){let e;try{e=t.LercDecode.decode(i.heightmap)}catch(e){throw new d.RuntimeError(e)}if(e.statistics[0].minValue===Number.MAX_VALUE)throw new d.RuntimeError("Invalid tile data");i.heightmap=e.pixels[0],i.width=e.width,i.height=e.height}i.ellipsoid=e.Ellipsoid.clone(i.ellipsoid),i.rectangle=o.Rectangle.clone(i.rectangle);const a=x.computeVertices(i),r=a.vertices;return n.push(r.buffer),{vertices:r.buffer,numberOfAttributes:a.encoding.stride,minimumHeight:a.minimumHeight,maximumHeight:a.maximumHeight,gridWidth:i.width,gridHeight:i.height,boundingSphere3D:a.boundingSphere3D,orientedBoundingBox:a.orientedBoundingBox,occludeePointInScaledSpace:a.occludeePointInScaledSpace,encoding:a.encoding,westIndicesSouthToNorth:a.westIndicesSouthToNorth,southIndicesEastToWest:a.southIndicesEastToWest,eastIndicesNorthToSouth:a.eastIndicesNorthToSouth,northIndicesWestToEast:a.northIndicesWestToEast}}))}));
